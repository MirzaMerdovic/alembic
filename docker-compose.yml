version: '3.7'

# Templates:
x-base: &base-service-template
  init: true
  networks:
    local:

services:

  portainer:
    <<: *base-service-template
    image: portainer/portainer:1.23.0
    container_name: portainer.ctn
    command: -p :80
    ports:
      - "9000:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  mongo:
    <<: *base-service-template
    image: mongo:latest
    deploy:
      replicas: 2
    #container_name: mongo.ctn
    command: >
      sh -c "mongod --bind_ip 0.0.0.0 --port 80"
    labels:
      - autoheal=true
    ports:
      - "80"
    # volumes:
      # - mongo_data:/data/db
    healthcheck:
      test: echo 'db.stats().ok' | mongo mongo:8023 --quiet
      interval: 15s
      timeout: 3s
      retries: 3

  sqlserver:
    <<: *base-service-template
    image: microsoft/mssql-server-linux:latest
    container_name: sqlserver.ctn
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQLSERVER_SA_PASSWORD:-Password1!}
    labels:
      - autoheal=true
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql/data
    healthcheck:
      test: ./opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P Password1!5 -Q "SELECT 1" || exit 1
      interval: 2s
      timeout: 2s
      retries: 3
      start_period: 3s

  # alembic:
    # <<: *base-service-template
    # #image: alembic:latest
    # container_name: alembic
    # build:
      # context: ./src
      # dockerfile: Dockerfile
    # environment:
      # - AUTOHEAL_CONTAINER_LABEL=all
    # stdin_open: true
    # tty: true
    # volumes:
      # - /var/run/docker.sock:/var/run/docker.sock
    # healthcheck:
      # test: curl --max-time "5" --no-buffer -s --unix-socket "/var/run/docker.sock" --fail http://localhost/_ping || exit 1
      # interval: 2s
      # timeout: 2s
      # retries: 3
      # start_period: 1s
      
networks:
  local:
    name: local

volumes:
  portainer_data:
  mongo_data:
  mssql_data: