version: '3.7'

services:

# Templates:
x-base: &base-service-template
  init: true
  networks:
    local:

services:

  portainer:
    <<: *base-service-template
    image: portainer/portainer:1.23.0
    container_name: portainer.ctn
    command: -p :80
    ports:
      - "9000:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  mongo:
    <<: *base-service-template
    image: mongo:latest
    deploy:
      replicas: 2
    command: >
      sh -c "mongod --bind_ip 0.0.0.0 --port 80"
    labels:
      - autoheal=true
    ports:
      - "80"
    healthcheck:
      test: echo 'db.stats().ok' | mongo mongo:8023 --quiet
      interval: 5s
      timeout: 3s
      retries: 3

  sqlserver:
    <<: *base-service-template
    image: microsoft/mssql-server-linux:latest
    container_name: sqlserver.ctn
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQLSERVER_SA_PASSWORD:-Password1!}
    labels:
      - autoheal=true
    ports:
      - "1433:1433"
    healthcheck:
      test: ./opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P Password1!5 -Q "SELECT 1" || exit 1
      interval: 2s
      timeout: 2s
      retries: 3
      start_period: 3s

  alembic:
    image: mirzamerdovic/alembic:1.0.0
    build:
      context: .
      dockerfile: Alembic/Dockerfile
    environment:
      - WebHookReporterOptions__Url=services/uuuuu
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./settings.json:/app/appsettings.json:ro
    healthcheck:
      test: curl --max-time "5" --no-buffer -s --unix-socket "/var/run/docker.sock" --fail http://localhost/_ping || exit 1
      interval: 2s
      timeout: 2s
      retries: 3
      start_period: 1s

networks:
  local:
    name: local

volumes:
  portainer_data: